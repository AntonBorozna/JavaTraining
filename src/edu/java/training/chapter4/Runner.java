package edu.java.training.chapter4;

/*
        Создать консольное приложение, удовлетворяющее следующим требованиям:
        • Использовать возможности ООП: классы, наследование, полиморфизм, ин-
        капсуляция.
        • Каждый класс должен иметь отражающее смысл название и информативный
        состав.
        • Наследование должно применяться только тогда, когда это имеет смысл.
        • При кодировании должны быть использованы соглашения об оформлении
        кода java code convention.
        • Классы должны быть грамотно разложены по пакетам.
        • Консольное меню должно быть минимальным.
        • Для хранения параметров инициализации можно использовать файлы.
        Авиакомпания. Определить иерархию самолетов. Создать авиакомпанию.
        Посчитать общую вместимость и грузоподъемность. Провести сортировку
        самолетов компании по дальности полета. Найти самолет в компании, со-
        ответствующий заданному диапазону параметров потребления горючего.
 */

public class Runner {

    public static void main(String[] args) {
        FlightPark park = new FlightPark();
        park.fillPlanes();
        System.out.println(park);
        System.out.println();
        System.out.println("Sum Capacity: ");
        park.sumCapacity();
        System.out.println();
        System.out.println("Sorting by range: ");
        park.sortByRange();
        System.out.println();
        park.rangeConsumption(4000, 9000);
    }
}
